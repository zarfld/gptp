name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
     
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up CMake & Build
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential doxygen graphviz
          mkdir build && cd build
          cmake ..
          make
      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure

  build-windows:
    runs-on: windows-latest

    env:
      WPCAP_DIR: "C:\\WpdPack"
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies (Chocolatey)
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          choco install doxygen -y
          choco install graphviz -y
        shell: powershell

      - name: Download and install WinPcap Developer Pack (WpdPack)
        run: |
          Invoke-WebRequest -Uri "https://www.winpcap.org/install/bin/WpdPack_4_1_2.zip" -OutFile "WpdPack.zip"
          Expand-Archive WpdPack.zip -DestinationPath "C:\WpdPack"
        shell: powershell

      - name: Verify WpdPack structure and env
        run: |
          echo "WPCAP_DIR is: $env:WPCAP_DIR"
          dir "C:\WpdPack"
          dir "C:\WpdPack\Include"
          dir "C:\WpdPack\Lib"
        shell: powershell
        
      - name: Add Graphviz to PATH
        run: |
          echo "C:\Program Files\Graphviz\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
        shell: powershell

      - name: Configure project
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build project
        run: cmake --build build --config Release

      - name: Generate Documentation (Optional)
        run: doxygen Doxyfile
        shell: bash
        continue-on-error: true  # Skip this step gracefully if Doxyfile is missing
